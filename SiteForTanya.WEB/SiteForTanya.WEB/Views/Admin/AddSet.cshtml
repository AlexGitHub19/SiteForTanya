@model int
@{
    Layout = Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section scripts {
    <link type="text/css" rel="stylesheet" href="~/Content/Admin/AdminAddSet.css" />
    <link type="text/css" rel="stylesheet" href="~/Content/SetStyle.css" />
    <link rel="stylesheet" href="~/Content/font-awesome.min.css">
}

<div id="bacgroundColorContainer">Adding Set</div>

<div class="tokenContainer">
    @Html.AntiForgeryToken()
</div>

@using (Html.BeginForm("SaveSet", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <input id="tempSetNumber" name = "tempSetNumber" value="@Model"/>

    <div id="setMainImageContainer">
        <img id="setMainImage" class="image" />
        <input id="inputFileMainImage" type="file" style="display:none" />
        <label>Choose set main image: </label>
        <i id="downloadsetMainImageBtnBeforeAdding" class="fa fa-picture-o fa-lg downloadImageBtnBeforeAddingImage" style="font-size:30px;" aria-hidden="true"></i>
        <label> it will be resized to 300*450 px</label>
        <div id="setMainImageblackout">
            <i id="downloadsetMainImageBtnAfterAdding" class="fa fa-picture-o fa-lg downloadImageBtnAfterAddingImage" style="font-size:30px;" aria-hidden="true"></i>
        </div>
    </div>

    <div class="row setInfoRow">
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
            <label id="setNameLabel" class="setInfolabel">Enter Set's name: </label>
        </div>
        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8">
            <input id="setName" name="setName" type="text" autocomplete="off" class="form-control setInfoInput">
        </div>
    </div>

    <div class="row setInfoRow">
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
            <label id="setTagsLabel" class="setInfolabel">Enter Set's Tags: </label>
        </div>
        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8">
            <textarea id ="setTags" name="setTags" rows="3" class="form-control setInfoInput" placeholder="Enter Tags (separate each tag by symbol ';')" autocomplete="off"></textarea>
        </div>
    </div>



    <div id="pageHtml"></div>

    <input id="resultHtml" type="text" name="resultHtml"/>
    <input id="resultHtmlWithoutNotResultElements" type="text" name="resultHtmlWithoutNotResultElements" />

    <div id="saveAndAddButtonsContainer">
        <button id="addRowButton" class="my-btn btn" type="button">Add row</button>
        <input id="saveButton" class="my-btn btn" type="submit" value="Save set" />
    </div>
}


<script>
    $(document).ready(function () {
        var totalRowCount = 1;
        var cellCount = 1;

        $(window).resize(function () {
            setHeightForAllSettingsontainers();
        });

        $('#downloadsetMainImageBtnBeforeAdding').click(function (e) {
            $("#inputFileMainImage").click();
        });

        $('#setMainImageContainer').on('click', '.downloadImageBtnAfterAddingImage', function (e) {
            $("#inputFileMainImage").click();
        });

        $('#inputFileMainImage').change(function () {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#setMainImage').attr('src', e.target.result);
                $('#setMainImage').addClass('srcChanged');
                $('#setMainImageContainer > label').remove();
                $('#setMainImageContainer > #downloadsetMainImageBtnBeforeAdding').remove();
                $('#setMainImageContainer > #setMainImageblackout').css('display', 'block');
                $('#setMainImageContainer').append('<div id="imageLoadingAnimationMainImage" class ="imageLoadingAnimation"> <i class="fa fa-spinner fa-spin" style="font-size:70px"></i></div>');
                sendImageToServer('MainImage');
            }

            reader.readAsDataURL(this.files[0]);

        });

        $('#addRowButton').on('click', function (e) {
            $('#pageHtml').append('<div id="imageRow' + totalRowCount + '" class="row imageRow border mainRow">' +
                '<i id="deleteRowBtn' + totalRowCount + '" class="fa fa-trash-o deleteRowBtn not-result" style="font-size:20px;" aria-hidden="true"></i>' +
                '<i id="showBorderBtn' + totalRowCount + '" class="fa fa-window-maximize showBorderBtn not-result" style="font-size:20px;" aria-hidden="true"></i>' +
                '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 noPadding clearfix">' +
                getImageRowHtml() +
                '</div>' +
                '</div>');
            totalRowCount++;
            cellCount++;
        });

        function getImageRowHtml() {
            return '<div id="imageContainer' + cellCount + '" class="imageContainer noPadding clearfix">' +
                   '<img id="image' + cellCount + '" class="image" alt="image cant be loaded" onload="imgLoaded(this)"/>' +
                   '<div id="settingsContainer' + cellCount + '" class ="settingsContainer not-result">' +
                   getSettingsRowHtml(cellCount) +
                   '</div>' +
                   '</div>';
        };

        function getSettingsRowHtml(cellNumber) {
            return '<input id="inputFile' + cellNumber + '" class="inputFile" type="file" style="display:none"/>' +
                    '<i id="downloadImageBtn' + cellNumber + '" class="fa fa-picture-o fa-lg downloadImageBtnBeforeAddingImage" style="font-size:30px;" aria-hidden="true"></i>' +
                     '<div class="form-group">' +
                     '<label id="splitToRowsLabel' + cellNumber + '" class="splitToRowsLabel">split to rows</label>' +
                     '</div>' +
                     '<div class="form-group">' +
                     '<label id="splitToColumnsLabel' + cellNumber + '"class="splitToColumnsLabel">split to columns</label>' +
                     '</div>';
        };

        $('#pageHtml').on('click', '.downloadImageBtn', function (e) {
            var cellNumber = getRowOrCellNumber(this);
            $("#inputFile" + cellNumber).click();
        });

        $('#pageHtml').on('click', '.downloadImageBtnBeforeAddingImage', function (e) {
            var cellNumber = getRowOrCellNumber(this);
            $("#inputFile" + cellNumber).click();
        });

        $('#pageHtml').on('click', '.floatLeftBtn', function (e) {
            var cellNumber = getRowOrCellNumber(this);
            $('#image' + cellNumber).css('float', 'left');
        });

        $('#pageHtml').on('click', '.floatCentertBtn', function (e) {
            var cellNumber = getRowOrCellNumber(this);
            $('#image' + cellNumber).css('float', 'none');
        });

        $('#pageHtml').on('click', '.floatRightBtn', function (e) {
            var cellNumber = getRowOrCellNumber(this);
            $('#image' + cellNumber).css('float', 'right');
        });

        $('#pageHtml').on('click', '.splitToRowsLabel', function (e) {
            var cellNumber = getRowOrCellNumber(this);
            var rowCount = prompt("Please enter rows count");
            var userRowCount = parseInt(rowCount);
            if (!isNaN(userRowCount)) {
                var newimageContainerHtml = '';
                for (i = 0; i < userRowCount; i++) {
                    newimageContainerHtml += '<div class="row imageRow">' +
                               '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 noPadding clearfix">' +
                               getImageRowHtml() +
                               '</div>' +
                               '</div>';
                    cellCount++;
                }
                $('#imageContainer' + cellNumber).parent().html(newimageContainerHtml);
                setHeightForAllSettingsontainers();
            }
            else
            {
                alert('Count of rows should be a digit!');
            }
        });

        $('#pageHtml').on('click', '.splitToColumnsLabel', function (e) {
            var cellNumber = getRowOrCellNumber(this);
            var rowCount = prompt("Please enter rows count");
            var userRowCount = parseInt(rowCount);
            if (!isNaN(userRowCount)) {
                if (userRowCount != 2 && userRowCount != 3 && userRowCount != 4 && userRowCount != 6) {
                    alert('Columns count should be 2,3,4 or 6!');
                    return;
                }

                var newimageContainerHtml = '<div class="row imageRow">';
                for (i = 0; i < userRowCount; i++) {
                    newimageContainerHtml += '<div class="col-xs-12 col-sm-' + 12 / userRowCount + ' col-md-' + 12 / userRowCount + ' col-lg-' + 12 / userRowCount + ' noPadding clearfix">' +
                               getImageRowHtml() +
                               '</div>';
                               '</div>';
                    cellCount++;
                }
                newimageContainerHtml += '</div>';
                $('#imageContainer' + cellNumber).parent().html(newimageContainerHtml);
                setHeightForAllSettingsontainers();
            }
            else {
                alert('Count of rows should be a digit!');
            }
        });

        $('#pageHtml').on('click', '.deleteRowBtn', function (e) {
            var rowNumber = getRowOrCellNumber(this);
            var action = confirm('do you want to delete the row?');
            if (action) {
                $("#imageRow" + rowNumber).remove();
            }
        });

        $('#pageHtml').on('click', '.showBorderBtn', function (e) {
            var rowNumber = getRowOrCellNumber(this);
            $('#imageRow' + rowNumber).toggleClass('border');
        });

        $('#pageHtml').on('change', '.inputFile', function (e) {
            var cellNumber = getRowOrCellNumber(this);

            var reader = new FileReader();
            reader.onload = function (e) {
                $('#image' + cellNumber).attr('src', e.target.result);
                $('#image' + cellNumber).addClass('srcChanged');
                $('#imageContainer' + cellNumber).append('<div id="imageLoadingAnimation' + cellNumber + '" class ="imageLoadingAnimation not-result"> <i class="fa fa-spinner fa-spin" style="font-size:70px"></i></div>');
                sendImageToServer(cellNumber);
            }

            reader.onloadend = function (e) {
                setHeightForAllSettingsontainers();
            }

            reader.readAsDataURL(this.files[0]);


            if (!$('#imageContainer' + cellNumber).hasClass('imageAdded')) {
                $('#settingsContainer' + cellNumber + ' > .downloadImageBtnBeforeAddingImage').remove();
                $('#splitToRowsLabel' + cellNumber).parent().remove();
                $('#splitToColumnsLabel' + cellNumber).parent().remove();
                //$('#settingsContainer' + cellNumber).html('');

                $('#settingsContainer' + cellNumber).append(getHtmlForSettingsContainer(cellNumber));
                $('#settingsContainer' + cellNumber).css('padding-top', '5px;');
                $('#imageContainer' + cellNumber).addClass('imageAdded');
                $('#imageContainer' + cellNumber).css('min-height', '1px');
            }

        });

        $('#pageHtml').on('keypress', '.margin-input', function (e) {
            var code = e.keyCode || e.which;
            if (code == 13) {
                var cellNumber = getRowOrCellNumber(this);
                if ($(this).hasClass('top')) {
                    var margin = $(this).val();
                    $('#imageContainer' + cellNumber).css('margin-top', margin);
                    setHeightForAllSettingsontainers();
                }
                else if ($(this).hasClass('left')) {
                    var margin = $(this).val();
                    $('#imageContainer' + cellNumber).css('margin-left', margin);
                }
                else if ($(this).hasClass('right')) {
                    var margin = $(this).val();
                    $('#imageContainer' + cellNumber).css('margin-right', margin);
                }
                else if ($(this).hasClass('bot')) {
                    var margin = $(this).val();
                    $('#imageContainer' + cellNumber).css('margin-bottom', margin);
                    setHeightForAllSettingsontainers();
                }
                e.preventDefault();
            }
        });

        $('#pageHtml').on('keypress', '.maxHeightInput', function (e) {
            var code = e.keyCode || e.which;
            if (code == 13) {
                e.preventDefault();
                var cellNumber = getRowOrCellNumber(this);
                var maxHeight = $(this).val();
                $('#image' + cellNumber).css('max-height', maxHeight + 'px');
                setHeightForAllSettingsontainers();
            }
        });

        $('#saveButton').on('click', function (e) {          
            if ($('#setMainImage').attr('src') == undefined)
            {
                alert('please fill set main image!');
                e.preventDefault();
                return;
            }
            var setName = $('#setName').val().trim();
            if (setName == '')
            {
                alert('please fill set name!');
                e.preventDefault();
                return;
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("CheckSetName", "Admin")',
                data: { __RequestVerificationToken: getAntiForgeryToken(), setName: setName },
                async: false,
                success: function (result) {
                    if (result.result== 'False')
                    {
                        e.preventDefault();
                        alert('Set with name: ' + setName + ' already exists. Choose another name, please');
                    }
                    else
                    {
                        if ($('#pageHtml').html() == '')
                        {
                            e.preventDefault();
                            alert("Set can't be empty!");
                        }
                        var result = $('#pageHtml').clone();
                        result = changeSrcs(result, setName);
                        var html = result.html();
                        var encodedHtml = encodeHtml(html);
                        $('#resultHtml').val(encodedHtml);

                        var result2 = $('#pageHtml').clone();
                        result2 = changeSrcs(result2, setName);
                        result2.find('.not-result').remove();
                        var html2 = result2.html();
                        var encodedHtml2 = encodeHtml(html2);
                        $('#resultHtmlWithoutNotResultElements').val(encodedHtml2);
                    }
                }
            });

        });

        function sendImageToServer(cellNumber) {
            var file = $('#inputFile' + cellNumber)[0].files[0];
            var tempSetNumber = $('#tempSetNumber').val();
            if (window.FormData !== undefined) {
                var data = new FormData();
                data.append("file", file);
                data.append("__RequestVerificationToken", getAntiForgeryToken());
                data.append("tempSetNumber", tempSetNumber);
                data.append("imageNumber", cellNumber);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadSetImage", "Admin")',
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        $('#imageLoadingAnimation' + cellNumber).remove();
                    }
                });
            } else {
                alert("Your browser doesn't allow to upload files HTML5!");
            }

        };


        function changeSrcs(resultHtml, setName) {
            resultHtml.find('.image').each(function (index, element) {
                var cellNumber = getRowOrCellNumber(element);
                if ($('#inputFile' + cellNumber).length > 0 && $('#inputFile' + cellNumber)[0].files.length > 0) {
                    var fileName = $('#inputFile' + cellNumber)[0].files[0].name;
                    var fileExtension = fileName.substring(fileName.lastIndexOf('.'))
                    if ($('#imageContainer' + cellNumber).hasClass('imageAdded')) {
                        $(element).attr('src', '/Content/Images/Sets/' + setName + '/' + 'Image' + cellNumber + fileExtension);
                    }
                }
            });
            return resultHtml;
        };

        function getRowOrCellNumber(element) {
            var id = $(element).attr('id');
            var number = 0;

            if ($.isNumeric(id.substring(id.length - 6))) {
                number = id.substring(id.length - 6);
            }
            else if ($.isNumeric(id.substring(id.length - 5))) {
                number = id.substring(id.length - 5);
            }
            else if ($.isNumeric(id.substring(id.length - 4))) {
                number = id.substring(id.length - 4);
            }
            else if ($.isNumeric(id.substring(id.length - 3))) {
                number = id.substring(id.length - 3);
            }
            else if ($.isNumeric(id.substring(id.length - 2))) {
                number = id.substring(id.length - 2);
            }
            else {
                number = id.substring(id.length - 1);
            }
            return number;
        };

        function encodeHtml(string) {
            return string.replace(/</g, "&lt;").replace(/>/g, "&gt;");
        };

        function getHtmlForSettingsContainer(cellNumber) {
            return '<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">' +
                 '<div class="form-group">' +
                     '<label class="margin-label">margin-left: </label>' +
                    '<input id="inputLeft' + cellNumber + '" name="SetMarginLeft" type="text" class="form-control margin-input left" autocomplete="off">' +
                 '</div> ' +
                 '<div class="form-group">' +
                     '<label class="margin-label">margin-top: </label>' +
                     '<input id="inputTop' + cellNumber + '" name="SetMarginTop" type="text" class="form-control margin-input top" autocomplete="off">' +
                 '</div>' +
                 '<div class="form-group">' +
                     '<label class="margin-label ">margin-right: </label>' +
                     '<input id="inputRight' + cellNumber + '" name="SetMarginRight" type="text" class="form-control margin-input right" autocomplete="off">' +
                 '</div>' +
                 '<div class="form-group">' +
                     '<label class="margin-label">margin-bot: </label>' +
                     '<input id="inputBot' + cellNumber + '" name="SetMarginBot" type="text" class="form-control margin-input bot" autocomplete="off">' +
                 '</div>' +
             '</div>' +
             '<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">' +
                 '<div class="form-group">' +
                     '<i id="downloadImageBtn' + cellNumber + '" class="fa fa-picture-o fa-lg downloadImageBtn" aria-hidden="true"></i>' +
                 '</div>' +
                 '<div class="form-group">' +
                         '<i id="floatLeftBtn' + cellNumber + '" class="fa fa-align-left fa-lg floatLeftBtn marg-r" aria-hidden="true"></i>' +
                         '<i id="floatCentertBtn' + cellNumber + '" class="fa fa-align-center fa-lg floatCentertBtn marg-r" aria-hidden="true"></i>' +
                         '<i id="floatRightBtn' + cellNumber + '" class="fa fa-align-right fa-lg floatRightBtn" aria-hidden="true"></i>' +
                 '</div>' +
                 '<div class="form-group">' +
                     '<label class="max-height-label">max-height: </label>' +
                     '<input id="maxHeightInput' + cellNumber + '" type="text" class="form-control maxHeightInput" autocomplete="off">' +
                 '</div>' +
                '<div class="form-group">' +
                     '<label id="splitToRowsLabel' + cellNumber + '" class="splitToRowsLabel">split to rows</label>' +
                 '</div>' +
                '<div class="form-group">' +
                     '<label id="splitToColumnsLabel' + cellNumber + '"class="splitToColumnsLabel">split to columns</label>' +
                '</div>' +
             '</div>';
        };

        function getAntiForgeryToken() {
            return $(".tokenContainer > input[type='hidden'][name$='RequestVerificationToken']").val();
        };

        function setHeightForAllSettingsontainers() {
            $('#pageHtml').find('.settingsContainer').each(function (index, element) {
                var imageRow = $(element).parent().parent().parent();
                var imageRowHeight = imageRow.height();
                $(element).css('height', imageRowHeight);
            });
        };

    });
</script>
