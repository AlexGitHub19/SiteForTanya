@{
    ViewBag.Title = "Images";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="tokenContainer">
    @Html.AntiForgeryToken()
</div>

<div id="resultInfo">
</div>
<div class="addImage">
    <input type="file" name="images" id="uploadImages" multiple/>
    <button id="addmageBtn" class="my-btn btn">Add images</button>
    <div id="loading">
        <i class="fa fa-spinner fa-spin" style="font-size:100px"></i>
    </div>   
    <div class="row" id="images">
    </div>
    <button id="uploadImagesBtn" class="my-btn btn" style="display:none;">Upload Images</button>
</div>

<div >
    <div id="itemSeacher">     
        <input id="searchInput" type="text" class="form-control input-lg" placeholder="Enter keyWord" autocomplete="off" spellcheck="false" autocorrect="off" data-autocomplete-source="@Url.Action("ImagesAutocompleteSearch", "Admin")" >
        <button id="searchBtn" class="my-btn btn">
            <i class="fa fa-search" style="font-size:20px" aria-hidden="true"></i>
        </button>
        <div id="searchInfoContainer">
            <label>Show </label>
            <div id="itemsCountContainer">
                <button id="itemsCountBtn" class="btn my-btn itemsCountBtn">7<i id="itemsCountBtnCaretDown" class="fa fa-caret-down" aria-hidden="true"></i></button>
                <div id="hiddden-ImageCount">
                    <div>
                        <button class="btn my-btn itemsCountBtn hiddenBtnImageCount">60</button>
                    </div>
                    <div>
                        <button class="btn my-btn itemsCountBtn hiddenBtnImageCount">100</button>
                    </div>
                </div>
            </div>
        </div>         

    </div>   
</div>

<div id="getImageNamesFromServerLoadingAnimation">
    <div id="fountainG">
        <div id="fountainG_1" class="fountainG"></div>
        <div id="fountainG_2" class="fountainG"></div>
        <div id="fountainG_3" class="fountainG"></div>
        <div id="fountainG_4" class="fountainG"></div>
        <div id="fountainG_5" class="fountainG"></div>
        <div id="fountainG_6" class="fountainG"></div>
        <div id="fountainG_7" class="fountainG"></div>
        <div id="fountainG_8" class="fountainG"></div>
    </div>
</div>
<div id="existingImages"></div>

<div id="pagination"></div>

<script type="text/javascript">

    $(document).ready(function () {

        getImagNamesFromServer(1);

        $('#addmageBtn').bind('click', function () {
            $('#uploadImages').click();
        });

        $('#searchBtn').bind('click', function () {
            getImagNamesFromServer(1);
        });

        function getImagNamesFromServer(pageNumber)
        {
            $('#pagination').fadeOut();
            showLoadingAnimation();
            var keyWords = $('#searchInput').val();
            var imagesCountOnPage = parseInt($('#itemsCountBtn').text());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetImagesNames", "Admin")',
                //processData: false,
                data: { __RequestVerificationToken: getAntiForgeryToken(), keyWords: keyWords, imagesCountOnPage: imagesCountOnPage, pageNumber: pageNumber },
                success: function (result) {
                    loadedBeginNumber = 0;
                    loadedEndNumber = result.imageNames.length;
                    loadedResultImageCount = result.imageCount;
                    loadedPageNumber = pageNumber;
                    fillImages(result);

                    setTimeout(showIfNotAllImagesAreLoaded, 12000);

                    function showIfNotAllImagesAreLoaded() {
                        $('#getImageNamesFromServerLoadingAnimation').css('display', 'none');
                        var imageContainers = $('#existingImages').find('.imageContainer');
                        imageContainers.each(function (index, element) {
                            if ($(element).css('display') == 'none') {
                                $(element).fadeIn(600);
                            }
                        });
                        createPagination(result.imageCount, pageNumber);
                    }
                },
                error: function (xhr, status, p3) {
                    alert('error');
                }
            });
        }

        function showLoadingAnimation()
        {
            $('#getImageNamesFromServerLoadingAnimation').css('display','block');
        }

        function fillImages(result)
        {
            if (result.imageCount == 0)
            {
                $('#existingImages').css('margin-top', '20px');
                $('#existingImages').css('margin-bottom', '0px');
                $('#existingImages').html('<h4>No images are found by this search criteria</h4>');
                return;
            }

            var html = '';
            var count = 0;
            while (count < result.imageNames.length)
            {
                var endValue = count+4;
                if (count + 4 > result.imageNames.length)
                {
                    endValue = result.imageNames.length;
                }
                var imageArray = new Array(0);
                for(var i = count; i < endValue; i++)
                {
                    imageArray.push(result.imageNames[i].value);
                }
                html += '<div class="row existingItemsRow">';
                for(var i = 0; i < imageArray.length; i++)
                {
                    var id = imageArray[i].substring(0, imageArray[i].indexOf('.'));
                    html += '<div id="' + id + '" class="col-xs-12 col-sm-6 col-md-3 col-lg-3 imageContainer">' +
                        '<div class="relativeClass clearfix"><img src="/Content/Images/Images/' + imageArray[i] + '" class="image" onload="imgLoaded(this)"/>' +
                        '<div id="deleteImageInfo-' + id + '" class ="deleteImageInfo"><i id="deleteImageBtn-' + id + '" class="fa fa-trash-o deleteImageBtn" style="font-size:23px;" aria-hidden="true"></i></div>' +
                        '<div id ="blackoutAnimation-' + id + '" class ="blackoutAnimation"></div>' +
                        '<div id ="deletingAnimation-' + id + '" class ="deletingAnimation"><i class="fa fa-spinner fa-spin" style="font-size:60px"></i></div>' +
                        '</div>' +
                        '</div>';
                }
                html+='</div>';
                count += 4;
            }
            $('#existingImages').css('margin-top', '20px');
            $('#existingImages').css('margin-bottom', '0px');
            $('#existingImages').html(html);
        }

        function getAntiForgeryToken() {
            return $(".tokenContainer > input[type='hidden'][name$='RequestVerificationToken']").val();
        }

        $('#uploadImages').bind('change', function (e) {
            for (var i = 0; i < this.files.length; i++) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#images').append('<div class="col-xs-12 col-sm-3 col-md-3 col-lg-3 imageContainer" style="display:block;">' +
                       '<img src = "' + e.target.result + '" class="image"/>' +
                       '</div>');
                }
                reader.readAsDataURL(this.files[i]);
            }
            if (this.files.length > 0) {
                $('#uploadImagesBtn').css('display', 'inline');
                $('#images').css('display', 'block');
                $('.addImage').css('background-color', '#ccc3a1;');
            }

        })

        $('#resultInfo').on('click', '.closeAlertBtn', function (e) {
            $('#resultInfo').html('');
        })

        $('#existingImages').on('mouseleave', '.imageContainer', function (e) {
            var id = $(this).attr('id');
            var html = '<i id="deleteImageBtn-' + id + '" class="fa fa-trash-o deleteImageBtn" style="font-size:23px;" aria-hidden="true"></i>';
            $(this).find('.deleteImageInfo').html(html);
        })

        $('#existingImages').on('click', '.deleteImageBtn', function (e) {
            var id = $(this).attr('id');
            var hyphenId = id.indexOf('-');
            var finalId = id.substring(hyphenId + 1);
            var html = '<p>CONFIRM DELETING</p>' +
                       '<i id="confirmDeleteBtn-' + finalId + '" style="font-size:28px;" class="fa fa-check confirmDeleteBtn" aria-hidden="true"></i>' +
                       '<i id="cancelDeleteBtn-' + finalId + '" style="font-size:28px;"  class="fa fa-times cancelDeleteBtn" aria-hidden="true"></i>';
            var blockHeight = $('#deleteImageInfo-' + finalId).width();

            var ischanged = false;
            if (blockHeight < 150)
            {
                ischanged = true;
            }
            $(this).parent().html(html);
            if (ischanged)
            {
                $('#confirmDeleteBtn-' + finalId).css('margin-right', '20px');
                $('#deleteImageInfo-' + finalId + ' > p').css('margin-bottom', '0px');
                $('#deleteImageInfo-' + finalId + ' > p').css('margin-top', '0px');
            }
        })

        $('#existingImages').on('click', '.confirmDeleteBtn', function (e) {
            var id = $(this).attr('id');
            var hyphenId = id.indexOf('-');
            var imageId = id.substring(hyphenId + 1);
            $('#deletingAnimation-' + imageId).fadeIn('slow', function () {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteImage", "Admin")',
                    data: { __RequestVerificationToken: getAntiForgeryToken(), imageName: imageId },
                    success: function (result) {
                        if (result.result == "Success")
                        {
                            $('#deletingAnimation-' + imageId).html('<p>IMAGE IS DELETED</p>');
                            setTimeout(function () {
                                getImagNamesFromServer(1);
                            }, 2000);
                        }
                        else
                        {
                            $('#deletingAnimation-' + imageId).html('<p>DELETING FAIL</p>');
                            setTimeout(function () {
                                $('#deletingAnimation-' + imageId).fadeOut('slow');
                            }, 2000);                           
                        }
                    },
                    error: function (xhr, status, p3) {
                        alert('error');
                    }
                });
            });
        })

        $('#existingImages').on('click', '.cancelDeleteBtn', function (e) {
            var id = $(this).attr('id');
            var hyphenId = id.indexOf('-');
            var imageId = id.substring(hyphenId + 1);
            var html = '<i id="deleteImageBtn-' + imageId + '" class="fa fa-trash-o deleteImageBtn" style="font-size:23px;" aria-hidden="true"></i>'
            $(this).parent().html(html);           
        })

        $('#pagination').on('click', '.paginationBtn', function (e) {
            var id = $(this).attr('id');
            var hyphenId = id.indexOf('-');
            var pageNumber = id.substring(hyphenId + 1);
            $('#pagination').fadeOut();
            $('html').animate({
                scrollTop: 0
            }, 500, function () {
                getImagNamesFromServer(pageNumber);
            });
        })

        $('#pagination').on('click', '#nextBtn', function (e) {
            var currentid = $('#pagination > .current').attr('id');
            var hyphenId = currentid.indexOf('-');
            var currentPageNumber = currentid.substring(hyphenId + 1);
            var lastId = $('#pagination > .paginationBtn').last().attr('id')
            var lastHyphenId = lastId.indexOf('-');
            var lastPageNumber = lastId.substring(hyphenId + 1);
            if (currentPageNumber == lastPageNumber)
            {
                e.preventDefault();
                return;
            }

            $('#pagination').fadeOut();
            $('html').animate({
                scrollTop: 0
            }, 500, function () {
                getImagNamesFromServer(parseInt(parseInt(currentPageNumber) + parseInt(1)));
            });
        })

        $('#pagination').on('click', '#prevBtn', function (e) {
            var currentid = $('#pagination > .current').attr('id');
            var hyphenId = currentid.indexOf('-');
            var currentPageNumber = currentid.substring(hyphenId + 1);
            if (currentPageNumber == 1) {
                e.preventDefault();
                return;
            }

            $('#pagination').fadeOut();
            $('html').animate({
                scrollTop: 0
            }, 500, function () {
                getImagNamesFromServer(parseInt(parseInt(currentPageNumber) - parseInt(1)));
            });
        })

        $('#uploadImagesBtn').on('click', function (e) {
            e.preventDefault();
            var files = document.getElementById('uploadImages').files;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    data.append("__RequestVerificationToken", getAntiForgeryToken());
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);                        
                    }
                    $('#images').html('');
                    $('#images').css('display', 'none');
                    $('#loading').css('display', 'block');
                    $('#uploadImages').val('');
                    $('#uploadImagesBtn').css('display', 'none');
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("UploadImages", "Admin")',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            $('#loading').css('display', 'none');
                            $('#resultInfo').html('<div class="alert alert-' + result.type + '" role="alert">' + result.resultString + '</div>' +
                                '<i class="fa fa-times fa-lg closeAlertBtn" aria-hidden="true"></i>');
                            $('.addImage').css('background-color', '#f4f1e4');
                            $('#searchInput').val();
                            getImagNamesFromServer(1);
                        },
                        error: function (xhr, status, p3) {
                            alert('error');
                            $('#loading').css('display', 'none');
                            $('.addImage').css('background-color', '#f4f1e4');
                        }
                    });
                } else {
                    alert("Browser doesn't provide ability to upload images!");
                }
            }
        });

        $('#searchInput').autocomplete({
            source: $('#searchInput').attr("data-autocomplete-source")
        });


        $("#itemsCountBtn").click(function () {
            var hiddendiv = $('#hiddden-ImageCount');
            var leftOfs = $(this).offset().left;
            hiddendiv.offset({ left: leftOfs });
            $(this).next().slideToggle('fast');
        });

        $(window).resize(function () {
            var hiddendiv = $('#hiddden-ImageCount');
            var itemsCountBtn = $('#itemsCountBtn');
            var leftOfs = itemsCountBtn.offset().left;
            hiddendiv.offset({ left: leftOfs });
        });

        $(window).click(function (e) {
            if ($('#hiddden-ImageCount').css('display') != 'none' && e.target.id != 'itemsCountBtn' && e.target.id != 'itemsCountBtnCaretDown') {
                $('#hiddden-ImageCount').slideToggle('fast');
            }
        })

        $('#hiddden-ImageCount').on('click', '.hiddenBtnImageCount', function (e) {
            var thisValue = $(this).text();
            var itemsCountBtnValue = $('#itemsCountBtn').text();
            $('#itemsCountBtn').text(thisValue);
            $('#itemsCountBtn').append('<i id ="itemsCountBtnCaretDown" class="fa fa-caret-down" aria-hidden="true"></i>');
            var value1 = 60;
            var value2 = 100;
            if (thisValue == 60) {
                var value1 = 32;
                var value2 = 100;
            }
            else if (thisValue == 100) {
                var value1 = 32;
                var value2 = 60;
            }

            $('#hiddden-ImageCount').html('<div><button class="btn my-btn itemsCountBtn hiddenBtnImageCount">' + value1 + '</button></div>' +
                       '<div><button class="btn my-btn itemsCountBtn hiddenBtnImageCount">' + value2 + '</button></div>');
            getImagNamesFromServer(1);
        })

        $('#pagination').on('keypress', '#inputGoToPage', function (e) {
            var code = e.keyCode || e.which;
            if (code == 13) {
                var pageNumber = parseInt($(this).val());
                if (!isNaN(pageNumber) && pageNumber <= buttonsCount)
                {
                    $('#pagination').fadeOut();
                    $('html').animate({
                        scrollTop: 0
                    }, 500, function () {
                        getImagNamesFromServer(pageNumber);
                    });                  
                }                            
            }
        })


    });

    //$.ajaxPrefilter(function (options, originalOptions, jqXHR) {
    //    if (options.type.toUpperCase() === "POST") {
    //        // We need to add the verificationToken to all POSTs
    //        var token = $(".tokenContainer > input[type='hidden'][name$='RequestVerificationToken']");
    //        if (!token.length) return;

    //        var tokenName = token.attr("name");
    //        alert(tokenName);

    //        // If the data is JSON, then we need to put the token in the QueryString:
    //        if (options.contentType.indexOf('application/json') === 0) {
    //            // Add the token to the URL, because we can't add it to the JSON data:
    //            options.url += ((options.url.indexOf("?") === -1) ? "?" : "&") + token.serialize();
    //        } else if (typeof options.data === 'string' && options.data.indexOf(tokenName) === -1) {
    //            // Append to the data string:
    //            options.data += (options.data ? "&" : "") + token.serialize();
    //        }
    //    }
    //});

    var loadedBeginNumber = 0;
    var loadedEndNumber = 0;
    var loadedResultImageCount = 0;
    var loadedPageNumber = 0;
    function imgLoaded(img) {
        loadedBeginNumber++;
        if (loadedBeginNumber == loadedEndNumber) {
            var imageContainers = $('#existingImages').find('.imageContainer');
            $('#getImageNamesFromServerLoadingAnimation').css('display', 'none');
            imageContainers.each(function (index, element) {
                if (index == imageContainers.length - 1) {
                    $(element).delay(100 * index).fadeIn(600, function () {
                        createPagination(loadedResultImageCount, loadedPageNumber);
                    });
                }
                else
                {
                    $(element).delay(100 * index).fadeIn(600);
                }
            });
        }
    };

    var buttonsCount = 0;
    function createPagination(totalImageCount, pageNumber) {
        var imagesCountOnPage = parseInt($('#itemsCountBtn').text());
        var html = getPaginationHtml(totalImageCount, imagesCountOnPage, pageNumber)
        buttonsCount = getButtonsCount(totalImageCount, imagesCountOnPage);

        $('#pagination').html(html);
        $('#paginationBtn-' + pageNumber).addClass('current');
        $('#pagination').fadeIn();
    }

    </script>